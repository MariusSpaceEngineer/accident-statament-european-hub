spring.datasource.url=jdbc:h2:mem:european_hub_test;MODE=MySQL;DATABASE_TO_UPPER=true
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=user
spring.datasource.password=password
# We add the MySQL Dialect so that it understands and generates the query based on MySQL
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.profiles.active=test


spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:/schema.sql
spring.sql.init.data-locations=classpath:/data.sql
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy


jwt.secret= 6/4/2flIkd7qU9EtTstkiBJp/LHA8bhCMUzO74AqG8dLuYJ0YvQI7qBrFe8C0YoU
jwt.signature-algorithm= HS256
#24 hours token
jwt.expiration= 86400000

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/inetum.p12
# The password used to generate the certificate
server.ssl.key-store-password=password
# The alias mapped to the certificate
server.ssl.key-alias=inetum

open-cage-api.key= 7c61f657b26943b6b4c272f4de1007f3

mailjet.api.key= e01f6c393d317fc9428585d0b6275f49
mailjet.secret.key.api= c96cb7342a71e148baa5435deab5948e
mailjet.sender.name= CrashKit
mailjet.sender.email= crashkit1@gmail.com